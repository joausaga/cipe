# Generated by Django 2.2.2 on 2019-06-24 11:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=300)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('web_page', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scientist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('scientific_area', models.CharField(choices=[('agricultura', 'Agricultura'), ('artes', 'Artes'), ('biologia', 'Biología'), ('biotecnologia_agricola', 'Biotecnología Agrícola'), ('biotecnologia_ambiente', 'Biotecnología del Ambiente'), ('biotecnologia_industrial', 'Biotecnología Industrial'), ('biotecnologia_medica', 'Biotecnología Médica'), ('educacion', 'Ciencias de la Educación'), ('ciencias_politicas', 'Ciencias Políticas'), ('ciencias_salud', 'Ciencias de la Salud'), ('comunicaciones', 'Comunicaciones'), ('economia', 'Economía'), ('filosofia', 'Filosofía'), ('fisica', 'Fisica'), ('ganaderia', 'Ganadería'), ('geografia', 'Geografía'), ('historia', 'Historia y Arqueología'), ('informatica', 'Informatica'), ('ing_ambiente', 'Ingenieria del Ambiente'), ('ing_civil', 'Ingenieria Civil'), ('ing_electronica', 'Ingenieria Electrónica'), ('ing_materiales', 'Ingenieria de Materiales'), ('ing_mecanica', 'Ingenieria Mecánica'), ('ing_quimica', 'Ingenieria Química'), ('lengua_literatura', 'Lengua y Literatura'), ('leyes', 'Leyes'), ('matematica', 'Matematica'), ('medician_basica', 'Medicina Básica'), ('medician_clinica', 'Medicina Clinica'), ('nano_tecnologia', 'Nano-Tecnología'), ('psicologia', 'Psicología'), ('quimica', 'Quimica'), ('religion', 'Religión'), ('sociologia', 'Sociología'), ('veterinara', 'Veterinaria'), ('otro', 'Otro')], default='otro', max_length=100)),
                ('position', models.CharField(choices=[('master_academico', 'Estudiante de Máster Académico'), ('doctorando', 'Estudiante de Doctorado'), ('postdoc', 'Post-doc'), ('profesor', 'Profesor'), ('otro', 'Otro')], default='otro', max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('femenino', 'Femenino'), ('masculino', 'Masculino'), ('otro', 'Otro')], max_length=50, null=True)),
                ('twitter_handler', models.CharField(blank=True, max_length=100, null=True)),
                ('gscholar_profile', models.URLField(blank=True, null=True)),
                ('scopus_profile', models.URLField(blank=True, null=True)),
                ('orcid', models.CharField(blank=True, max_length=100, null=True)),
                ('becal', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Institution')),
                ('scientist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Scientist')),
            ],
            options={
                'unique_together': {('scientist', 'institution')},
            },
        ),
    ]
